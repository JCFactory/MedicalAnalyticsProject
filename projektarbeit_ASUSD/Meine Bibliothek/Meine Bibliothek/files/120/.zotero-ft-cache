 Skip to main content Switch to mobile version
Warning: Some features may not work without JavaScript. Please try enabling it if you encounter problems.
PyPI
Search PyPI Search
Help Donate Log in Register
Search PyPI Search
gensim 3.7.2

pip install gensim Copy PIP instructions
Latest version

Last released: Apr 10, 2019

Python framework for fast Vector Space Modelling
Navigation
Project description Release history Download files
Project links
Homepage Download
Statistics

View statistics for this project via Libraries.io , or by using Google BigQuery
Meta

License: GNU Lesser General Public License v2 or later (LGPLv2+) (LGPLv2.1)

Author: Radim Rehurek

Tags: Singular Value Decomposition, SVD, Latent Semantic Indexing, LSA, LSI, Latent Dirichlet Allocation, LDA, Hierarchical Dirichlet Process, HDP, Random Projections, TFIDF, word2vec
Maintainers
Avatar for mpenkov from gravatar.com mpenkov Avatar for piskvorky from gravatar.com piskvorky
Classifiers

Development Status
    5 - Production/Stable 
Environment
    Console 
Intended Audience
    Science/Research 
License
    OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+) 
Operating System
    OS Independent 
Programming Language
    Python :: 2.7 
    Python :: 3.5 
    Python :: 3.6 
    Python :: 3.7 
Topic
    Scientific/Engineering :: Artificial Intelligence 
    Scientific/Engineering :: Information Analysis 
    Text Processing :: Linguistic 

Project description Project details Release history Download files
Project description

Travis Wheel

Gensim is a Python library for topic modelling , document indexing and similarity retrieval with large corpora. Target audience is the natural language processing (NLP) and information retrieval (IR) community.
Features

    All algorithms are memory-independent w.r.t. the corpus size (can process input larger than RAM, streamed, out-of-core),
    Intuitive interfaces
        easy to plug in your own input corpus/datastream (trivial streaming API)
        easy to extend with other Vector Space algorithms (trivial transformation API)
    Efficient multicore implementations of popular algorithms, such as online Latent Semantic Analysis (LSA/LSI/SVD) , Latent Dirichlet Allocation (LDA) , Random Projections (RP) , Hierarchical Dirichlet Process (HDP) or word2vec deep learning .
    Distributed computing : can run Latent Semantic Analysis and Latent Dirichlet Allocation on a cluster of computers.
    Extensive documentation and Jupyter Notebook tutorials .

If this feature list left you scratching your head, you can first read more about the Vector Space Model and unsupervised document analysis on Wikipedia.
Installation

This software depends on NumPy and Scipy , two Python packages for scientific computing. You must have them installed prior to installing gensim .

It is also recommended you install a fast BLAS library before installing NumPy. This is optional, but using an optimized BLAS such as ATLAS or OpenBLAS is known to improve performance by as much as an order of magnitude. On OS X, NumPy picks up the BLAS that comes with it automatically, so you don’t need to do anything special.

The simple way to install gensim is:

 pip install -U gensim

Or, if you have instead downloaded and unzipped the source tar.gz package, you’d run:

 python setup.py test
python setup.py install

For alternative modes of installation (without root privileges, development installation, optional install features), see the install documentation .

This version has been tested under Python 2.7, 3.5 and 3.6. Support for Python 2.6, 3.3 and 3.4 was dropped in gensim 1.0.0. Install gensim 0.13.4 if you must use Python 2.6, 3.3 or 3.4. Support for Python 2.5 was dropped in gensim 0.10.0; install gensim 0.9.1 if you must use Python 2.5). Gensim’s github repo is hooked against Travis CI for automated testing on every commit push and pull request.
How come gensim is so fast and memory efficient? Isn’t it pure Python, and isn’t Python slow and greedy?

Many scientific algorithms can be expressed in terms of large matrix operations (see the BLAS note above). Gensim taps into these low-level BLAS libraries, by means of its dependency on NumPy. So while gensim-the-top-level-code is pure Python, it actually executes highly optimized Fortran/C under the hood, including multithreading (if your BLAS is so configured).

Memory-wise, gensim makes heavy use of Python’s built-in generators and iterators for streamed data processing. Memory efficiency was one of gensim’s design goals , and is a central feature of gensim, rather than something bolted on as an afterthought.
Documentation

    QuickStart
    Tutorials
    Tutorial Videos
    Official Documentation and Walkthrough

Citing gensim

When citing gensim in academic papers and theses , please use this BibTeX entry:

 @inproceedings{rehurek_lrec,
      title = {{Software Framework for Topic Modelling with Large Corpora}},
      author = {Radim {\v R}eh{\r u}{\v r}ek and Petr Sojka},
      booktitle = {{Proceedings of the LREC 2010 Workshop on New
           Challenges for NLP Frameworks}},
      pages = {45--50},
      year = 2010,
      month = May,
      day = 22,
      publisher = {ELRA},
      address = {Valletta, Malta},
      language={English}
}

Gensim is open source software released under the GNU LGPLv2.1 license . Copyright (c) 2009-now Radim Rehurek

Analytics
Project details
Project links
Homepage Download
Statistics

View statistics for this project via Libraries.io , or by using Google BigQuery
Meta

License: GNU Lesser General Public License v2 or later (LGPLv2+) (LGPLv2.1)

Author: Radim Rehurek

Tags: Singular Value Decomposition, SVD, Latent Semantic Indexing, LSA, LSI, Latent Dirichlet Allocation, LDA, Hierarchical Dirichlet Process, HDP, Random Projections, TFIDF, word2vec
Maintainers
Avatar for mpenkov from gravatar.com mpenkov Avatar for piskvorky from gravatar.com piskvorky
Classifiers

Development Status
    5 - Production/Stable 
Environment
    Console 
Intended Audience
    Science/Research 
License
    OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+) 
Operating System
    OS Independent 
Programming Language
    Python :: 2.7 
    Python :: 3.5 
    Python :: 3.6 
    Python :: 3.7 
Topic
    Scientific/Engineering :: Artificial Intelligence 
    Scientific/Engineering :: Information Analysis 
    Text Processing :: Linguistic 


Release history Release notifications
This version
History Node

3.7.2

Apr 10, 2019
History Node

3.7.1

Jan 31, 2019
History Node

3.7.0

Jan 18, 2019
History Node

3.6.0

Sep 20, 2018
History Node

3.5.0

Jul 6, 2018
History Node

3.4.0

Mar 1, 2018
History Node

3.3.0

Feb 2, 2018
History Node

3.2.0

Dec 9, 2017
History Node

3.1.0

Nov 6, 2017
History Node

3.0.1

Oct 12, 2017
History Node

3.0.0

Sep 27, 2017
History Node

2.3.0

Jul 25, 2017
History Node

2.2.0

Jun 21, 2017
History Node

2.1.0

May 12, 2017
History Node

2.0.0

Apr 11, 2017
History Node

1.0.1

Mar 4, 2017
History Node

1.0.0

Feb 25, 2017
History Node

1.0.0rc2 pre-release

Feb 17, 2017
History Node

1.0.0rc1 pre-release

Feb 1, 2017
History Node

0.13.4.1

Jan 5, 2017
History Node

0.13.4

Dec 25, 2016
History Node

0.13.3

Oct 21, 2016
History Node

0.13.2

Aug 26, 2016
History Node

0.13.1

Jun 24, 2016
History Node

0.13.0

Jun 22, 2016
History Node

0.13.0rc1 pre-release

Jun 10, 2016
History Node

0.12.4

Jan 31, 2016
History Node

0.12.3

Nov 6, 2015
History Node

0.12.3rc1 pre-release

Nov 6, 2015
History Node

0.12.2

Sep 19, 2015
History Node

0.12.1

Jul 20, 2015
History Node

0.12.1rc1 pre-release

Jul 20, 2015
History Node

0.12.0

Jul 6, 2015
History Node

0.12.0rc1 pre-release

Jul 6, 2015
History Node

0.11.1-1

Apr 11, 2015
History Node

0.11.1

Apr 11, 2015
History Node

0.10.3

Nov 19, 2014
History Node

0.10.2

Sep 18, 2014
History Node

0.10.1

Jul 22, 2014
History Node

0.10.0

Jun 4, 2014
History Node

0.10.0rc1 pre-release

May 18, 2014
History Node

0.9.1

Apr 12, 2014
History Node

0.9.0

Mar 15, 2014
History Node

0.8.9

Dec 26, 2013
History Node

0.8.8

Nov 3, 2013
History Node

0.8.7

Sep 18, 2013
History Node

0.8.6

Sep 16, 2012
History Node

0.8.5

Jul 22, 2012
History Node

0.8.4

Mar 9, 2012
History Node

0.8.3

Dec 2, 2011
History Node

0.8.2

Oct 31, 2011
History Node

0.8.1

Oct 10, 2011
History Node

0.8.0

Jun 28, 2011
History Node

0.8.0rc1 pre-release

Jun 20, 2011
History Node

0.7.8

Mar 26, 2011
History Node

0.7.7

Feb 13, 2011
History Node

0.7.6

Jan 10, 2011
History Node

0.7.5

Nov 3, 2010
History Node

0.7.4

Sep 13, 2010
History Node

0.7.3

Sep 7, 2010
History Node

0.7.2

Sep 1, 2010
History Node

0.7.1

Aug 28, 2010
History Node

0.7.0

Aug 28, 2010
History Node

0.7.0rc2 pre-release

Aug 24, 2010
History Node

0.6.0

Jun 19, 2010
History Node

0.5.0

Apr 28, 2010
History Node

0.4.7

Apr 27, 2010
History Node

0.4.6

Apr 17, 2010
History Node

0.4.5

Apr 5, 2010
History Node

0.4.4

Mar 30, 2010
History Node

0.4.3

Mar 29, 2010
History Node

0.4.2

Mar 28, 2010
History Node

0.4.1

Mar 19, 2010
History Node

0.4

Mar 19, 2010
History Node

0.3.0

Mar 18, 2010
History Node

0.2

Mar 18, 2010
Download files

Download the file for your platform. If you're not sure which to choose, learn more about installing packages .
Filename, size & hash SHA256 hash help 	File type 	Python version 	Upload date
gensim-3.7.2-cp27-cp27m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (24.7 MB) Copy SHA256 hash SHA256 	Wheel 	cp27 	Apr 10, 2019
gensim-3.7.2-cp27-cp27m-manylinux1_i686.whl (24.1 MB) Copy SHA256 hash SHA256 	Wheel 	cp27 	Apr 10, 2019
gensim-3.7.2-cp27-cp27m-manylinux1_x86_64.whl (24.2 MB) Copy SHA256 hash SHA256 	Wheel 	cp27 	Apr 10, 2019
gensim-3.7.2-cp27-cp27mu-manylinux1_i686.whl (24.1 MB) Copy SHA256 hash SHA256 	Wheel 	cp27 	Apr 10, 2019
gensim-3.7.2-cp27-cp27mu-manylinux1_x86_64.whl (24.2 MB) Copy SHA256 hash SHA256 	Wheel 	cp27 	Apr 10, 2019
gensim-3.7.2-cp35-cp35m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (24.6 MB) Copy SHA256 hash SHA256 	Wheel 	cp35 	Apr 10, 2019
gensim-3.7.2-cp35-cp35m-manylinux1_i686.whl (24.1 MB) Copy SHA256 hash SHA256 	Wheel 	cp35 	Apr 10, 2019
gensim-3.7.2-cp35-cp35m-manylinux1_x86_64.whl (24.2 MB) Copy SHA256 hash SHA256 	Wheel 	cp35 	Apr 10, 2019
gensim-3.7.2-cp36-cp36m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (24.7 MB) Copy SHA256 hash SHA256 	Wheel 	cp36 	Apr 10, 2019
gensim-3.7.2-cp36-cp36m-manylinux1_i686.whl (24.1 MB) Copy SHA256 hash SHA256 	Wheel 	cp36 	Apr 10, 2019
gensim-3.7.2-cp36-cp36m-manylinux1_x86_64.whl (24.2 MB) Copy SHA256 hash SHA256 	Wheel 	cp36 	Apr 10, 2019
gensim-3.7.2-cp37-cp37m-macosx_10_6_intel.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl (24.7 MB) Copy SHA256 hash SHA256 	Wheel 	cp37 	Apr 10, 2019
gensim-3.7.2-cp37-cp37m-manylinux1_i686.whl (24.1 MB) Copy SHA256 hash SHA256 	Wheel 	cp37 	Apr 10, 2019
gensim-3.7.2-cp37-cp37m-manylinux1_x86_64.whl (24.2 MB) Copy SHA256 hash SHA256 	Wheel 	cp37 	Apr 10, 2019
gensim-3.7.2.tar.gz (23.4 MB) Copy SHA256 hash SHA256 	Source 	None 	Apr 10, 2019
Logo

    Help
    Installing packages
    Uploading packages
    User guide
    FAQs

    About PyPI
    PyPI on Twitter
    Infrastructure dashboard
    Package index name retention
    Our sponsors

    Contributing to PyPI
    Bugs and feedback
    Contribute on GitHub
    Development credits

    Using PyPI
    Code of conduct
    Report security issue
    Privacy policy
    Terms of use

Status: All Systems Operational

Developed and maintained by the Python community, for the Python community.
Donate today!

© 2019 Python Software Foundation
Desktop version

Supported by
Elastic Elastic Search Pingdom Pingdom Monitoring Google Google BigQuery Sentry Sentry Error logging AWS AWS Cloud computing DataDog DataDog Monitoring Fastly Fastly CDN SignalFx SignalFx Supporter DigiCert DigiCert EV certificate StatusPage StatusPage Status page
